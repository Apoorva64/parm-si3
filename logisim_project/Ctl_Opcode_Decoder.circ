<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.5.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution (https://github.com/reds-heig/logisim-evolution).

  <lib desc="#Wiring" name="0">
    <tool name="Splitter">
      <a name="facing" val="west"/>
      <a name="fanout" val="4"/>
      <a name="incoming" val="1"/>
    </tool>
    <tool name="Pin">
      <a name="facing" val="north"/>
    </tool>
    <tool name="Probe">
      <a name="facing" val="west"/>
      <a name="radix" val="10unsigned"/>
    </tool>
    <tool name="Tunnel">
      <a name="facing" val="south"/>
    </tool>
    <tool name="Pull Resistor">
      <a name="facing" val="north"/>
    </tool>
    <tool name="Clock">
      <a name="facing" val="north"/>
    </tool>
    <tool name="Constant">
      <a name="facing" val="south"/>
      <a name="value" val="0x0"/>
      <a name="width" val="2"/>
    </tool>
    <tool name="Ground">
      <a name="facing" val="west"/>
      <a name="width" val="24"/>
    </tool>
    <tool name="Transistor">
      <a name="type" val="n"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1">
    <tool name="NOT Gate">
      <a name="size" val="20"/>
    </tool>
    <tool name="AND Gate">
      <a name="size" val="30"/>
    </tool>
    <tool name="OR Gate">
      <a name="size" val="30"/>
    </tool>
    <tool name="PLA">
      <a name="table" val=""/>
    </tool>
  </lib>
  <lib desc="#Plexers" name="2">
    <tool name="Multiplexer">
      <a name="enable" val="false"/>
    </tool>
    <tool name="Demultiplexer">
      <a name="enable" val="false"/>
    </tool>
  </lib>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4">
    <tool name="D Flip-Flop">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="T Flip-Flop">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="J-K Flip-Flop">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="S-R Flip-Flop">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="Register">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="Counter">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="Shift Register">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="Random">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="RAM">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="ROM">
      <a name="appearance" val="logisim_evolution"/>
      <a name="contents">addr/data: 8 8
0
</a>
    </tool>
  </lib>
  <lib desc="#I/O" name="5"/>
  <lib desc="#HDL-IP" name="6">
    <tool name="VHDL Entity">
      <a name="content">--------------------------------------------------------------------------------
-- HEIG-VD, institute REDS, 1400 Yverdon-les-Bains
-- Project :
-- File    :
-- Autor   :
-- Date    :
--
--------------------------------------------------------------------------------
-- Description :
--
--------------------------------------------------------------------------------

library ieee;
  use ieee.std_logic_1164.all;
  --use ieee.numeric_std.all;

entity VHDL_Component is
  port(
  ------------------------------------------------------------------------------
  --Insert input ports below
    horloge_i  : in  std_logic;                    -- input bit example
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example
  ------------------------------------------------------------------------------
  --Insert output ports below
    max_o      : out std_logic;                    -- output bit example
    cpt_o      : out std_logic_Vector(3 downto 0)  -- output vector example
    );
end VHDL_Component;

--------------------------------------------------------------------------------
--Complete your VHDL description below
architecture type_architecture of VHDL_Component is


begin


end type_architecture;
</a>
    </tool>
  </lib>
  <lib desc="#TCL" name="7">
    <tool name="TclGeneric">
      <a name="content">library ieee;
use ieee.std_logic_1164.all;

entity TCL_Generic is
  port(
    --Insert input ports below
    horloge_i  : in  std_logic;                    -- input bit example
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example

	  --Insert output ports below
    max_o      : out std_logic;                    -- output bit example
    cpt_o      : out std_logic_Vector(3 downto 0)  -- output vector example
  );
end TCL_Generic;
</a>
    </tool>
  </lib>
  <lib desc="#Base" name="8">
    <tool name="Text Tool">
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="text" val=""/>
      <a name="valign" val="base"/>
    </tool>
  </lib>
  <lib desc="#BFH-Praktika" name="9"/>
  <main name="Opcode_Decoder"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Menu Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Text Tool">
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="text" val=""/>
      <a name="valign" val="base"/>
    </tool>
    <sep/>
    <tool lib="0" name="Pin">
      <a name="appearance" val="NewPins"/>
    </tool>
    <tool lib="0" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
  </toolbar>
  <circuit name="Opcode_Decoder">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="Opcode_Decoder"/>
    <a name="circuitnamedboxfixedsize" val="false"/>
    <a name="circuitvhdlpath" val=""/>
    <a name="clabel" val=""/>
    <a name="clabelfont" val="SansSerif bold 16"/>
    <a name="clabelup" val="east"/>
    <comp lib="0" loc="(150,790)" name="Tunnel">
      <a name="facing" val="north"/>
      <a name="label" val="SHIFT"/>
    </comp>
    <comp lib="0" loc="(260,900)" name="Tunnel">
      <a name="facing" val="north"/>
      <a name="label" val="DP"/>
    </comp>
    <comp lib="0" loc="(370,850)" name="Tunnel">
      <a name="facing" val="north"/>
      <a name="label" val="LS"/>
    </comp>
    <comp lib="0" loc="(470,880)" name="Tunnel">
      <a name="facing" val="north"/>
      <a name="label" val="SP"/>
    </comp>
    <comp lib="0" loc="(510,510)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="COND"/>
    </comp>
    <comp lib="0" loc="(520,140)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="SHIFT"/>
    </comp>
    <comp lib="0" loc="(520,220)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="DP"/>
    </comp>
    <comp lib="0" loc="(520,310)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="LS"/>
    </comp>
    <comp lib="0" loc="(520,390)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="SP"/>
    </comp>
    <comp lib="0" loc="(550,140)" name="Pin">
      <a name="facing" val="west"/>
      <a name="label" val="Shift"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(550,220)" name="Pin">
      <a name="facing" val="west"/>
      <a name="label" val="Data_Processing"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(550,310)" name="Pin">
      <a name="facing" val="west"/>
      <a name="label" val="Load_Store"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(550,390)" name="Pin">
      <a name="facing" val="west"/>
      <a name="label" val="SP_Address"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(550,510)" name="Pin">
      <a name="facing" val="west"/>
      <a name="label" val="Conditional"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(570,880)" name="Tunnel">
      <a name="facing" val="north"/>
      <a name="label" val="COND"/>
    </comp>
    <comp lib="0" loc="(80,100)" name="Tunnel">
      <a name="facing" val="north"/>
      <a name="label" val="OP_IN"/>
      <a name="width" val="6"/>
    </comp>
    <comp lib="0" loc="(80,710)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="OP_IN"/>
      <a name="width" val="6"/>
    </comp>
    <comp lib="0" loc="(80,80)" name="Pin">
      <a name="facing" val="south"/>
      <a name="label" val="Opcode"/>
      <a name="width" val="6"/>
    </comp>
    <comp lib="0" loc="(90,710)" name="Splitter">
      <a name="fanout" val="6"/>
      <a name="incoming" val="6"/>
    </comp>
    <comp lib="1" loc="(150,770)" name="NAND Gate">
      <a name="facing" val="south"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(230,770)" name="NAND Gate">
      <a name="facing" val="south"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(250,830)" name="AND Gate">
      <a name="facing" val="south"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(260,880)" name="AND Gate">
      <a name="facing" val="south"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(270,770)" name="NAND Gate">
      <a name="facing" val="south"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(350,770)" name="NAND Gate">
      <a name="facing" val="south"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(370,830)" name="AND Gate">
      <a name="facing" val="south"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(390,760)" name="AND Gate">
      <a name="facing" val="south"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(450,800)" name="AND Gate">
      <a name="facing" val="south"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(460,750)" name="NOT Gate">
      <a name="facing" val="south"/>
      <a name="size" val="20"/>
    </comp>
    <comp lib="1" loc="(470,860)" name="AND Gate">
      <a name="facing" val="south"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(490,800)" name="AND Gate">
      <a name="facing" val="south"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(550,800)" name="AND Gate">
      <a name="facing" val="south"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(570,860)" name="AND Gate">
      <a name="facing" val="south"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(580,750)" name="NOT Gate">
      <a name="facing" val="south"/>
      <a name="size" val="20"/>
    </comp>
    <comp lib="1" loc="(590,800)" name="AND Gate">
      <a name="facing" val="south"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="8" loc="(762,150)" name="Text">
      <a name="text" val="Shift, add, sub, mov (00XXXX)"/>
    </comp>
    <comp lib="8" loc="(775,320)" name="Text">
      <a name="text" val="Load/Store (1001XX)"/>
    </comp>
    <comp lib="8" loc="(783,398)" name="Text">
      <a name="text" val="SP Address (1011XX)"/>
    </comp>
    <comp lib="8" loc="(831,230)" name="Text">
      <a name="text" val="Data Processing (01000X)"/>
    </comp>
    <comp lib="8" loc="(886,519)" name="Text">
      <a name="text" val="Conditional branch (1101 cond)(11100 uncond)"/>
    </comp>
    <wire from="(110,650)" to="(140,650)"/>
    <wire from="(110,660)" to="(160,660)"/>
    <wire from="(110,670)" to="(260,670)"/>
    <wire from="(110,680)" to="(240,680)"/>
    <wire from="(110,690)" to="(220,690)"/>
    <wire from="(110,700)" to="(630,700)"/>
    <wire from="(140,650)" to="(140,730)"/>
    <wire from="(140,650)" to="(280,650)"/>
    <wire from="(150,770)" to="(150,790)"/>
    <wire from="(160,660)" to="(160,730)"/>
    <wire from="(160,660)" to="(300,660)"/>
    <wire from="(220,690)" to="(220,730)"/>
    <wire from="(220,690)" to="(630,690)"/>
    <wire from="(230,770)" to="(230,780)"/>
    <wire from="(230,780)" to="(240,780)"/>
    <wire from="(240,680)" to="(240,730)"/>
    <wire from="(240,680)" to="(400,680)"/>
    <wire from="(240,780)" to="(240,800)"/>
    <wire from="(250,830)" to="(250,850)"/>
    <wire from="(260,670)" to="(260,730)"/>
    <wire from="(260,670)" to="(360,670)"/>
    <wire from="(260,780)" to="(260,800)"/>
    <wire from="(260,780)" to="(270,780)"/>
    <wire from="(260,880)" to="(260,900)"/>
    <wire from="(270,770)" to="(270,780)"/>
    <wire from="(270,840)" to="(270,850)"/>
    <wire from="(270,840)" to="(300,840)"/>
    <wire from="(280,650)" to="(280,730)"/>
    <wire from="(280,650)" to="(380,650)"/>
    <wire from="(300,660)" to="(300,840)"/>
    <wire from="(300,660)" to="(340,660)"/>
    <wire from="(340,660)" to="(340,730)"/>
    <wire from="(340,660)" to="(460,660)"/>
    <wire from="(350,770)" to="(350,780)"/>
    <wire from="(350,780)" to="(360,780)"/>
    <wire from="(360,670)" to="(360,730)"/>
    <wire from="(360,670)" to="(480,670)"/>
    <wire from="(360,780)" to="(360,800)"/>
    <wire from="(370,830)" to="(370,850)"/>
    <wire from="(380,650)" to="(380,730)"/>
    <wire from="(380,650)" to="(440,650)"/>
    <wire from="(380,780)" to="(380,800)"/>
    <wire from="(380,780)" to="(390,780)"/>
    <wire from="(390,760)" to="(390,780)"/>
    <wire from="(400,680)" to="(400,730)"/>
    <wire from="(400,680)" to="(500,680)"/>
    <wire from="(440,650)" to="(440,770)"/>
    <wire from="(440,650)" to="(540,650)"/>
    <wire from="(450,800)" to="(450,820)"/>
    <wire from="(450,820)" to="(460,820)"/>
    <wire from="(460,660)" to="(460,730)"/>
    <wire from="(460,660)" to="(560,660)"/>
    <wire from="(460,750)" to="(460,770)"/>
    <wire from="(460,820)" to="(460,830)"/>
    <wire from="(470,860)" to="(470,880)"/>
    <wire from="(480,670)" to="(480,770)"/>
    <wire from="(480,670)" to="(580,670)"/>
    <wire from="(480,820)" to="(480,830)"/>
    <wire from="(480,820)" to="(490,820)"/>
    <wire from="(490,800)" to="(490,820)"/>
    <wire from="(500,680)" to="(500,770)"/>
    <wire from="(500,680)" to="(600,680)"/>
    <wire from="(510,510)" to="(550,510)"/>
    <wire from="(520,140)" to="(550,140)"/>
    <wire from="(520,220)" to="(550,220)"/>
    <wire from="(520,310)" to="(550,310)"/>
    <wire from="(520,390)" to="(550,390)"/>
    <wire from="(540,650)" to="(540,770)"/>
    <wire from="(540,650)" to="(630,650)"/>
    <wire from="(550,800)" to="(550,820)"/>
    <wire from="(550,820)" to="(560,820)"/>
    <wire from="(560,660)" to="(560,770)"/>
    <wire from="(560,660)" to="(630,660)"/>
    <wire from="(560,820)" to="(560,830)"/>
    <wire from="(570,860)" to="(570,880)"/>
    <wire from="(580,670)" to="(580,730)"/>
    <wire from="(580,670)" to="(630,670)"/>
    <wire from="(580,750)" to="(580,770)"/>
    <wire from="(580,820)" to="(580,830)"/>
    <wire from="(580,820)" to="(590,820)"/>
    <wire from="(590,800)" to="(590,820)"/>
    <wire from="(600,680)" to="(600,770)"/>
    <wire from="(600,680)" to="(630,680)"/>
    <wire from="(80,710)" to="(90,710)"/>
    <wire from="(80,80)" to="(80,100)"/>
  </circuit>
</project>
